---
x-service-common: &service-common
  restart: always
  networks:
    - default
  timezone: UTC

services:
  web:
    <<: *service-common
    enabled: false
    container_name: web.${COMPOSE_PROJECT_NAME-colouring-dresden-dev}
    image: docker.io/library/nginx:${NGINX_VERSION-1.25}
    volumes:
      #######################################################
      # # generate new cert
      - ./data/web/00-https.sh:/docker-entrypoint.d/00-https.sh:Z
      # # otherwise provide own cert
      # - ./data/web/ssl/cert.pem:/etc/nginx/ssl/cert.pem:Z
      # - ./data/web/ssl/key.pem:/etc/nginx/ssl/key.pem:Z
      #######################################################
      - ./data/web/nginx.conf.template:/etc/nginx/templates/default.conf.template:Z
    environment:
      - DOMAIN=${COMPOSE_PROJECT_NAME-colouring-dresden-dev}
      - WEB_DOMAIN=web.${COMPOSE_PROJECT_NAME-colouring-dresden-dev}
      - PROXY_API_DEST=http://app.${COMPOSE_PROJECT_NAME-colouring-dresden-dev}:${APP_PORT-3000}
      - PUB_HTTPS_PORT=${PUB_HTTPS_PORT-8443}
    security_opt:
      - label=type:container_t
    depends_on:
      app:
        condition: service_started
    ports:
      - ${PUB_HTTP_PORT-8080}:80
      - ${PUB_HTTPS_PORT-8443}:443

  app:
    <<: *service-common
    container_name: app.${COMPOSE_PROJECT_NAME-colouring-dresden-dev}
    image: ${APP_CONTAINER_IMAGE-localhost/colouring-dresden-dev}:${NODE_IMAGE_VERSION-20-slim}
    build:
      context: .
      additional_contexts:
        app: ../app
      dockerfile: Containerfile
      target: colouring-dresden
      # no_cache: true
      args:
        - NODE_IMAGE_VERSION=${NODE_IMAGE_VERSION-20-slim}
    environment:
      - PGDATABASE=${POSTGRES_DBNAME-colouringdresdendb}
      - PGUSER=${POSTGRES_USER-colouringdresdendb_user}
      - PGPASSWORD=${POSTGRES_PASS-colouringdresdendb_user_pw}
      - PGHOST=db.${COMPOSE_PROJECT_NAME-colouring-dresden-dev}
      - PGPORT=5432
      - APP_COOKIE_SECRET=${APP_COOKIE_SECRET-123456}
      - CLIENT_PUBLIC_PATH=${CLIENT_PUBLIC_PATH}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # - ../app/build:/app/build:ro
      - app-build:/app/build:z

      - ../app/map_styles:/app/map_styles:ro
      - ../app/package.json:/app/package.json:ro
      - ../app/package-lock.json:/app/package-lock.json:ro
      - ../app/public:/app/public:ro
      - ../app/razzle.config.js:/app/razzle.config.js:ro
      - ../app/src:/app/src:ro
      - ../app/tsconfig.json:/app/tsconfig.json:ro
    user: root
    networks:
      default:
        aliases:
          - "${COMPOSE_PROJECT_NAME}"
    command: |
      sh -c "\
        npm run start;\
      "

  db:
    <<: *service-common
    container_name: db.${COMPOSE_PROJECT_NAME-colouring-dresden-dev}
    image: docker.io/kartoza/postgis:${POSTGRES_MAJOR-15}
    environment:
      - POSTGRES_DBNAME=${POSTGRES_DBNAME-colouringdresdendb}
      - POSTGRES_USER=${POSTGRES_USER-colouringdresdendb_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-colouringdresdendb_user_pw}
      # - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD-scram-sha-256}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD-md5}
      - POSTGRES_MULTIPLE_EXTENSIONS=${POSTGRES_MULTIPLE_EXTENSIONS-hstore,postgis,pgcrypto,pg_trgm}
      - PGDATA=/var/lib/postgresql/${POSTGRES_MAJOR-15}/main
      - DB_PORT=5432
      - DB_HOST=db.${COMPOSE_PROJECT_NAME-colouring-dresden-dev}
    volumes:
      - ./data/db/00-migrations.sh:/docker-entrypoint-initdb.d/00-migrations.sh:Z
      - ${MIGRATIONS_DIR_SRC-../migrations}/:/docker-entrypoint-initdb.d/migrations/:Z
      - db-data:/var/lib/postgresql/${POSTGRES_MAJOR-15}/main
    healthcheck:
      test: ["CMD", "su", "-", "postgres", "-c", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - label=type:container_t

volumes:
  db-data:
  app-build:

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME-colouring-dresden-dev}-net
    # external: true
