---
version: '3.9'

x-defaultnet: &defaultnet ${NETNAME-default}

x-service-common: &service-common
  pull_policy: ${IMAGE_PULL_POLICY-never}
  replace: true
  detach: true
  enabled: true
  restart: always
  networks:
    default:
      name: *defaultnet
  # cap_drop:
  #   - ALL
  timezone: UTC
  # pod: ${DOMAIN_NAME-cd}-pod

services:
  web:
    <<: *service-common
    container_name: ${WEB_DOMAIN_NAME-cd-web}
    image: ${WEB_CONTAINER_IMAGE-nginx}
    volumes:
      #######################################################
      # # generate new cert
      - ./data/web/00-https.sh:/docker-entrypoint.d/00-https.sh:Z
      # # otherwise provide own cert
      # - ./data/web/ssl/cert.pem:/etc/nginx/ssl/cert.pem:Z
      # - ./data/web/ssl/key.pem:/etc/nginx/ssl/key.pem:Z
      #######################################################
      - ./data/web/nginx.conf.template:/etc/nginx/templates/default.conf.template:Z
    environment:
      - DOMAIN=${DOMAIN_NAME-cd}
      - WEB_DOMAIN=${WEB_DOMAIN_NAME-cd-web}
      - HTTP_PORT=${PORT-80}
      - HTTPS_PORT=${PORT-443}
      # - ENABLE_INSECURE=false
      # - PROXY_API_DEST=http://${APP_DOMAIN_NAME-cd-app}:${APP_DOMAIN_PORT-3000} # hardcoded in prod
      - PROXY_API_DEST=http://${APP_DOMAIN_NAME-cd-app}:3000
    security_opt:
      - label=type:container_t
    depends_on:
      app:
        condition: service_started
    networks:
      default:
        name: *defaultnet
        aliases:
          - ${DOMAIN_NAME-cd}

  app:
    <<: *service-common
    container_name: ${APP_DOMAIN_NAME-cd-app}
    image: ${APP_CONTAINER_IMAGE-colouring-dresden}
    build:
      context: .
      dockerfile: Containerfile
      # target: colouring-dresden
    environment:
      - PGDATABASE=${POSTGRES_DBNAME-colouringdresdendb}
      - PGUSER=${POSTGRES_USER-colouringdresdendb_user}
      - PGPASSWORD=${POSTGRES_PASS-colouringdresdendb_user_pw}
      - PGHOST=${DB_DOMAIN_NAME-cd-db}
      - PGPORT=${DB_PORT-5432}
      - APP_COOKIE_SECRET=${APP_COOKIE_SECRET-123456}
      - HOST=${APP_DOMAIN_NAME-cd-app}
      # - PORT=${APP_DOMAIN_PORT-3000} # hardcoded in prod
    depends_on:
      db:
        condition: service_healthy

  db:
    <<: *service-common
    container_name: ${DB_DOMAIN_NAME-cd-db}
    image: postgis:${POSTGRES_MAJOR-13}
    environment:
      - POSTGRES_DBNAME=${POSTGRES_DBNAME-colouringdresdendb}
      - POSTGRES_USER=${POSTGRES_USER-colouringdresdendb_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-colouringdresdendb_user_pw}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD-scram-sha-256}
      - POSTGRES_MULTIPLE_EXTENSIONS=${POSTGRES_MULTIPLE_EXTENSIONS-hstore,postgis,pgcrypto,pg_trgm}
      - PGDATA=/var/lib/postgresql/${POSTGRES_MAJOR-13}/main
      - DB_PORT=${DB_PORT-5432}
      - DB_HOST=${DB_DOMAIN_NAME-cd-db}
    volumes:
      - ./data/db/00-migrations.sh:/docker-entrypoint-initdb.d/00-migrations.sh:Z
      - ${MIGRATIONS_DIR_SRC-../migrations}/:/docker-entrypoint-initdb.d/migrations/:Z
      - db-data:/var/lib/postgresql/${POSTGRES_MAJOR-13}/main
    healthcheck:
      test: ["CMD", "su", "-", "postgres", "-c", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - label=type:container_t

volumes:
  db-data:

networks:
  default:
    name: *defaultnet
    external: true
